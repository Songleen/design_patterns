是什么：是一种结构设计模式，基于类的最小设计原则，通过封装、继承、及聚合等方式让不同的类承担不同的职责；
       将实现与抽象放在两个不同的类层次中，使两个层次可以独立改变。

为什么会有：替代多层继承方案，针对传统方式在某些情况下进行扩展时会出现“类爆炸”，可以减少子类的个数。

如何使用：将接口和抽象分离，在使用的时候要正确识别出系统中两个独立变化的维度(抽象和实现)。

为什么要有一个抽象类？不是两个接口。因为需要将接口聚合到抽象类中；接口是不允许有成员变量的。这里的抽象类承担了一个“桥”的作用。

常见的应用场景：
            1）：JDBC驱动程序(Driver接口)
            2）：银行转账系统
                 转账分类：网上转账、柜台转账、AMT转账
                 用户类型：普通用户、银卡用户、金卡用户
            3）：消息管理
                 消息类型：即时消息、延时消息
                 消息分类：手机短信、邮件短信、QQ消息