静态代理：需要定义接口或者抽象类，代理对象和被代理对象都需要实现或者继承相同的接口或者实现类；
        缺点：因为代理对象需要和目标对象实现一样的接口，所以会有很多的代理类，一旦接口增加方法，目标对象与代理对象都需要维护。


动态代理：代理对象不需要实现接口，但目标对象需要实现接口；代理对象的生成，是利用JDK的API动态在内存中构建代理对象。

Cglib代理：动态代理需要目标对象实现接口，但有时目标对象是一个单独的对象，没有可实现的接口，这个时候可以使用目标对象子类来实现代理(Cglib代理)

          注意：代理的类不能为final，否则报错java.lang.IllegalArgumentException;
               目标对象的方法如果是final/static，那么就不会被拦截，即不会执行目标对象额外的业务方法。